C51 COMPILER V9.01   C_P_3                                                                 01/10/2017 23:18:42 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE C_P_3
OBJECT MODULE PLACED IN C-P-3.OBJ
COMPILER INVOKED BY: E:\Keil4\C51\BIN\C51.EXE C-P-3.c OPTIMIZE(0,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <string.h>             //strlen()ÒªÓÃµ½
   3          #include <intrins.h>
   4          #include <stdio.h>
   5          //#include <math.h>             //¼¸´Î·½ pow(ÊýÖµ,¼¸´Î·½)
   6          //#include <stdlib.h>           //atoi()ÒªÓÃµ½£¬
   7          
   8           /*
   9           atof()     ½«×Ö·û´®×ª»»ÎªË«¾«¶È¸¡µãÐÍÖµ
  10           atoi()     ½«×Ö·û´®×ª»»ÎªÕûÐÍÖµ
  11           atol()     ½«×Ö·û´®×ª»»Îª³¤ÕûÐÍÖµ
  12           strtod()   ½«×Ö·û´®×ª»»ÎªË«¾«¶È¸¡µãÐÍÖµ£¬²¢±¨¸æ²»ÄÜ±»×ª»»µÄËùÓÐÊ£ÓàÊý×Ö
  13           strtol()   ½«×Ö·û´®×ª»»Îª³¤ÕûÖµ£¬²¢±¨¸æ²»ÄÜ±»×ª»»µÄËùÓÐÊ£ÓàÊý×Ö
  14           strtoul()  ½«×Ö·û´®×ª»»ÎªÎÞ·ûºÅ³¤ÕûÐÍÖµ£¬²¢±¨¸æ²»ÄÜ±»×ª»»µÄËùÓÐÊ£ÓàÊý×Ö
  15           */
  16          
  17          //sbit led0=P0^0;sbit led1=P0^1;sbit led2=P0^2;sbit led3=P0^3;sbit led4=P0^4;sbit led5=P0^5;
  18          unsigned char number[16]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71}
             -; //Êý×Ö0~F,Ð¡ÊýµãÎªP0.7(µ¥¶ÀÏÔÊ¾0x80)
  19          unsigned char wei[6]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf};           //ÊýÂë¹ÜÎ»ÖÃÑ¡Ôñ
  20          
  21          sbit duanx=P2^6;    //¶ÎÑ¡ÐÅºÅµÄËø´æÆ÷¿ØÖÆ
  22          sbit weix=P2^7;   //Î»Ñ¡ÐÅºÅµÄËø´æÆ÷¿ØÖÆ
  23          //unsigned char RBuff[8];               //={'1','2','3','4','q','9','w','6','5'};     //´®¿Ú»º´æ
  24          unsigned int num[7];
  25          unsigned int display_ctr=0;
  26          unsigned int sending=0,new_signal=0;            //sendingÓÃÓÚ»º½â´®¿ÚÊý¾Ý·¢ËÍ½ÏÂýµÄÇé¿ö,new_signalÓÃÓÚÅÐ¶ÏÊÇ·ñÓÐÐÂÊý
             -¾Ý½øÈë
  27          int p=0;
  28          
  29          //------------¾²Ì¬Ñ­»·¶ÓÁÐ£¨Êý×é£©£¨ÎÞÍ·Ö¸Õë£©¶¨Òå-----------------
  30          #define maxsize 20 
  31          typedef struct Queue            //´æ´¢½á¹¹
  32          {
  33                  char elem[maxsize];
  34                  int rear;
  35          };
  36          
  37          void InitQueue(struct Queue *Q)         //³õÊ¼»¯,ÕâÀïÓÉÓÚÊÇÖ±½ÓÐ´Êý¾ÝÀàÐÍQueue,»¹Ã»Ð´¾ßÌåµÄ±äÁ¿,Ö»ÄÜÓÃÖ¸Õë*QÃ»°ì·
             -¨È¡µØÖ··û&Q
  38          {
  39   1              Q->rear=-1;
  40   1      }
  41          
  42          void EnQueue(struct Queue *Q,char e)    //½ø¶ÓÁÐ
  43          {
  44   1              Q->rear = (Q->rear+1) % maxsize;
  45   1              Q->elem[Q->rear] = e;
  46   1      }
  47          
  48          unsigned char SerQueue(struct Queue *Q,int r)           // rÎªËùÒª²éÕÒµÄµ±Ç°Î»ÖÃ
  49          {               //²é¿´¶ÓÁÐÔªËØÊ±ÈôÎ»ÖÃÎª¸ºÊý£¬È¡ÓàÓÐ±àÒëÆ÷¼°ÓïÑÔ²îÒì£¬±£ÊØÆð¼û×Ô¸öÐ´
  50   1              if (r<0)
  51   1                      return Q->elem[maxsize+1+r];
  52   1              else
C51 COMPILER V9.01   C_P_3                                                                 01/10/2017 23:18:42 PAGE 2   

  53   1                      return Q->elem[r%maxsize];
  54   1      }
  55          
  56          struct Queue RBuff;             //RbuffÊÇÒ»¸ö×Ö·ûÊý×é
  57          
  58          //------------ÑÓÊ±º¯Êý-----------------
  59          void Delayms( unsigned int z )
  60          {
  61   1              unsigned int x;
  62   1              unsigned int y;
  63   1              for( x = z; x > 0; x-- )
  64   1              {
  65   2                      for( y = 110; y > 0; y-- );
  66   2              }
  67   1      }
  68          
  69          //----------³õÊ¼»¯-------------
  70          void Init()
  71          {
  72   1                                              //´®¿ÚÉèÖÃ
  73   1              SCON = 0x50;             //¹¤×÷·½Ê½1
  74   1              PCON = 0;                //²¨ÌØÂÊ²»¼Ó±¶
  75   1              TMOD = 0x20;
  76   1              TH1 = 0xfd;             //11.0592¾§Õñ£¬9600²¨ÌØÂÊ
  77   1              TL1 = TH1;
  78   1              TR1 = 1;
  79   1              REN = 1;
  80   1              ES = 1;                 //ÔÊÐí´®¿ÚÖÐ¶Ï
  81   1              TI = 0;                 //ÕâÁ½ÌõÔÚ¶à¸öÖÐ¶ÏÖÐÒ»¶¨ÒªÐ´£¬²»È»²»ÄÜ½øÈë´®¿ÚÖÐ¶Ï
  82   1              EA = 1;
  83   1      }
  84          
  85          //------------P0¿ÚÖØÖÃ--------------------------------
  86          void ResetP0()
  87          {
  88   1              P0=0xff;
  89   1      }
  90          
  91          //------------ÊýÂë¹Ü¶¯Ì¬ÏÔÊ¾--------------------------------
  92          void Display(int x )    //xÓÃÓÚ¿ØÖÆÊýÂë¹ÜÏÔÊ¾ÊýÁ¿
  93          {                                                               //P0.0~0.7¿ØÖÆ573Ëø´æÆ÷
  94   1              int y,k;
  95   1              while(display_ctr && !RI)
  96   1              {
  97   2                      for(k=0;k<x;k++)
  98   2                      {
  99   3                              duanx=0;
 100   3                              weix=0;
 101   3                              y=num[k];
 102   3                              P0=number[y];            //Ñ¡ÔñÏÔÊ¾Êý×Ö,¹²Òõ
 103   3                              duanx=1;
 104   3                              duanx=0;
 105   3      
 106   3                              ResetP0();              
 107   3                              P0=wei[k];                      //ÊýÂë¹ÜÎ»ÖÃÑ¡Ôñ,P0.0~0.5£¬ÓÉ×óÖÁÓÒ£¬²Ù×÷¹²Ñô£¬Êµ¼Ê¹²Òõ
 108   3                              weix=1;
 109   3                              weix=0;
 110   3      
 111   3                              Delayms(2);
 112   3                      }               
 113   2              }
 114   1      }
C51 COMPILER V9.01   C_P_3                                                                 01/10/2017 23:18:42 PAGE 3   

 115          
 116          //------------´®¿Ú·¢ËÍ--·¢ËÍº¯Êý-----------------
 117          void Send(int message)
 118          {
 119   1              sending=1;
 120   1              SBUF = message;
 121   1              Delayms(10);
 122   1              while(1)
 123   1              {
 124   2                      if (sending==0) break;
 125   2              }
 126   1      }
 127          
 128          //------------´®¿Ú·¢ËÍÐÅÏ¢Ñ¡Ôñ-----------------
 129          void Sort_send(int length)
 130          {
 131   1              unsigned n=0;
 132   1              while(n<length)
 133   1              {
 134   2                      Send(num[n]);
 135   2                      n++;
 136   2              }
 137   1              display_ctr=1;          //Ïò´®¿Ú·¢ËÍÍêºó¿ªÆôÊýÂë¹ÜÏÔÊ¾
 138   1              Delayms(100);
 139   1              Display(length);                //strlen()²»ÄÜ¼ÆËãÂú¶îÊý×éµÄ³¤¶È£¬±ØÐëÐ¡ÓÚ
 140   1      }
 141          
 142          //------------×Ö·û×ªÕûÐÍÊý×Ö²¢Êä³ö--------------------------------
 143          void char_to_int()
 144          {
 145   1              int i=0,n=0,k=0;
 146   1              int j=RBuff.rear-1;
 147   1              n=strlen(RBuff.elem);           //Óöµ½¿Õ×Ö·û¼´Êý×Ö0±ãÍ£Ö¹Í³¼Æ
 148   1              while(i<6 && k<n)               //È¡ÊäÈëµÄÇ°6¶øÎªÊý×ÖµÄÊýÊä³ö(ÊýÂë¹ÜÖ»ÓÐ6¸ö),ÈôÒÑÊäÈëÉÙÓÚ
 149   1              {                                               //atoiÊÇ½«×Ö·û¡¾´®¡¿×ª»»ÎªÊý×Ö°¡
 150   2                      if (SerQueue(&RBuff,j-k)>='0' && SerQueue(&RBuff,j-k)<='9')
 151   2                      {
 152   3                              num[i]=SerQueue(&RBuff,j-i)-'0';                //num[i]=atoi(c);       
 153   3                              i++;            //ÓÃÓÚnumÊý×é
 154   3                      }
 155   2                      k++;            //µ¹×ÅÑ­»·RBuff¶ÓÁÐ
 156   2              }
 157   1              memset(RBuff.elem,'z',8);               //Ìî³äRBuff¿Õ×Ö·û,¼´ÕûÐÍÊý×Ö0,ÒÔ±ãÍ³¼ÆÐÂÊäÈëµÄ×Ö·û
 158   1              RBuff.rear=-1;
 159   1              Sort_send(i);
 160   1      }
 161          
 162          //------------´®¿Ú½ÓÊÕ--------------------------------
 163          void Receive() 
 164          {
 165   1              //P1 = 0xff;
 166   1              //display_ctr=0;
 167   1              EnQueue(&RBuff,SBUF);           //SBUF´®¿Ú¼Ä´æÆ÷,Á½¸öµØÖ·Ò»Ñù99H,µ«ÎïÀíÉÏÏà»¥¶ÀÁ¢²»»á¸²¸Ç
 168   1              new_signal=1;           //±êÊ¶ÓÐÐÂÊý¾Ý½øÀ´
 169   1              display_ctr=0;          //¹Ø±ÕÊýÂë¹ÜÏÔÊ¾Ñ­»·,±ÜÃâ¸ÉÈÅ,±£Ö¤½øÈëÖ÷º¯Êý¡®@¡¯µÄ¼ì²â
 170   1      }
 171          
 172          //------------ÖÐ¶Ï»ØÖÃ¼°»ººÍ´®¿Ú×èÈû-----------
 173          void Send_interrupt(void) interrupt 4 using 1
 174          //ÖÐ¶Ï0 Íâ²¿ÖÐ¶Ï0£»ÖÐ¶Ï1 ¶¨Ê±Æ÷1ÖÐ¶Ï£»ÖÐ¶Ï2 Íâ²¿ÖÐ¶Ï1£»ÖÐ¶Ï3 ¶¨Ê±Æ÷2ÖÐ¶Ï£»ÖÐ¶Ï4 ´®¿ÚÖÐ¶Ï
 175          //using 0 ÊÇµÚ0×é¼Ä´æÆ÷¡£using 1 ÊÇµÚ1×é¼Ä´æÆ÷¡£using 2 ÊÇµÚ2×é¼Ä´æÆ÷¡£using 3 ÊÇµÚ3×é¼Ä´æÆ÷¡£                   
 176          {
C51 COMPILER V9.01   C_P_3                                                                 01/10/2017 23:18:42 PAGE 4   

 177   1              if(TI)      //TIÔÚÂß¼­Ê±ÐòÉÏÏÈÓÚRI´¥·¢
 178   1              {
 179   2                      ES=0;
 180   2                      sending=0;      //Çå³ýÕýÔÚ·¢ËÍ±êÖ¾
 181   2                      TI=0;   
 182   2                      ES=1;           //·¢ËÍÖÐ¶Ï»ØÖÃ
 183   2              }
 184   1              if(RI)    //ÊÕµ½Êý¾Ý
 185   1              {
 186   2                      ES=0;   //¹Ø±Õ´®¿ÚÖÐ¶Ï
 187   2                      Receive();
 188   2                      RI=0;   //ÇåÖÐ¶ÏÇëÇó
 189   2                      ES=1;   //´ò¿ª´®¿ÚÖÐ¶Ï
 190   2              }
 191   1      }
 192                  
 193          
 194          void main(void)
 195          {
 196   1              Init();
 197   1              InitQueue(&RBuff);
 198   1              while(1)  //²»ÈÃÖ÷º¯ÊýÑ­»·Ö´ÐÐ²¢ÇÒÑ­»·¼ì²â£¨²éÑ¯·½Ê½£©
 199   1              {
 200   2                      if(SerQueue(&RBuff,RBuff.rear) == '@' && new_signal)
 201   2                      {
 202   3                              char_to_int();
 203   3                      }
 204   2              }               
 205   1      }
*** WARNING C291 IN LINE 54 OF C-P-3.C: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    819    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    104    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
