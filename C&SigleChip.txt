keil加载虚拟串口指令

MODE COM2 9600,0,8,1


ASSIGN COM2<SIN>SOUT


//------------中断回置及缓和串口阻塞-----------------------------------------
void Send_interrupt(void) interrupt 4 using 1
//中断0 外部中断0；中断1 定时器1中断；中断2 外部中断1；中断3 定时器2中断；中断4 串口中断
//using 0 是第0组寄存器。using 1 是第1组寄存器。using 2 是第2组寄存器。using 3 是第3组寄存器。

//----------初始化------------------------------------------------------------
void Init()
{
	//AUXR &= 0xFB;     //定时器2时钟为Fosc/12,即12T,T2在预分频禁止时默认为12分频
	//AUXR |= 0x01;		//串口1选择定时器2为波特率发生器,已经在T2CON设置R/TCLK

	RCAP2H = 0xff;  	//T2高8位重载值
	RCAP2L = 0xdc;	    //T2低8位重载值
	TH2 = RCAP2H;	    //T2初值
	TL2 = RCAP2L;	    //T2初值     
		
	PCON = 0;       //波特率不加倍	
	T2CON = 0x34;	    //T2控制设置,在R/TCLK确定T2作为串口波特率产生器 TF2 EXF2 (RCLK) (TCLK) EXEN2 (TR2) C/T2 CP/RL2
	T2MOD = 0x01;	    //T2模式设置, D7 D6 D5 D4 D3 D2 T2OE(输出到P1.0) DCEN(向下计数允许)
	SCON = 0x50;	    //串口工作方式1,8位数据,可变波特率
	REN = 1;	//启用串口接收

    /*--------------------Timer1--------------------------------*/
	TMOD = 0x10;	//定时器1,工作模式1(8位)
	TH1=(65536-46080)/256;		//所记次数应为46080,计时器每隔50000us即50ms发起一次中断
	TL1=(65536-46080)%256;		//46080=50000*11.0592/12
	TR1 = 1;	//打开定时器1

    /*-------------------interrupt_control----------------------*/
	ES = 0;//先关闭串口中断,WIFI模块初始化后再打开
	TI = 0;//串口输出中断需先置0避免引起冲突
	EA = 1;//开启总中断
}

---------------------------------------------------------

单片机自发自收的话应该是先产生TI置位，再产生RI置位

---------------------------------------------------------

#include< >为使用默认文件夹中的文件，
#include" "为使用程序目录中的文件	//需要调用其他文件时的文件声明

头文件加载顺序，看代码位置以及预读取的先后位置，不知道就直接加extern

全局变量在main.c中定义后，往后的头文件使用无需再次声明；
仅在前面的文件中 使用 后面的文件 的变量、函数，甚至自定义类型，需要在前面的文件中用 extern (类型) (名称) 先声明；
 
---------------------------------------------------------

类型定义不分配内存的，比如类的定义，结构体的定义，它是定义一个数据类型而已
数据定义分配内存，比如类对象定义，变量定义
一个原则：
不分配内存的，放在头文件
分配内存的放在c 或cpp文件

-------------防止头文件重复编译--------------------------

#ifndef _delay_uart_h_
#define _delay_uart_h_
	//内容
#endif
----------------------------------------------------------
字符数组char* a[]="HELLO"存储在全局数据区或栈区，字符串char* b="HELLO"存储在常量区。全局数据区和栈区的字符串（也包括其他数据）有读取和写入的权限，而常量区的字符串（也包括其他数据）只有读取权限，没有写入权限。
a[]无法用strcmp()

/*--------------------中断顺序----------------------------*/
//外部中断0 > 定时/计数器0 > 外部中断1 > 定时/计数器1 > 串行中断
//IP=0x00;//默认
/*两级中断嵌套,必须有高低优先级,同级不发生嵌套*/
PT1=1;	//Timer1优先级
PT0=1;	//Timer0优先级